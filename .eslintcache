[{"C:\\Users\\grego\\dev\\project\\sr3Matrix\\git\\sr3-matrix\\src\\index.tsx":"1","C:\\Users\\grego\\dev\\project\\sr3Matrix\\git\\sr3-matrix\\src\\reportWebVitals.ts":"2","C:\\Users\\grego\\dev\\project\\sr3Matrix\\git\\sr3-matrix\\src\\App.tsx":"3","C:\\Users\\grego\\dev\\project\\sr3Matrix\\git\\sr3-matrix\\src\\common\\Enums.ts":"4","C:\\Users\\grego\\dev\\project\\sr3Matrix\\git\\sr3-matrix\\src\\common\\Core.ts":"5","C:\\Users\\grego\\dev\\project\\sr3Matrix\\git\\sr3-matrix\\src\\redux\\store.ts":"6","C:\\Users\\grego\\dev\\project\\sr3Matrix\\git\\sr3-matrix\\src\\redux\\reducer\\index.ts":"7","C:\\Users\\grego\\dev\\project\\sr3Matrix\\git\\sr3-matrix\\src\\components\\host\\Host.tsx":"8","C:\\Users\\grego\\dev\\project\\sr3Matrix\\git\\sr3-matrix\\src\\components\\hint\\Hint.tsx":"9","C:\\Users\\grego\\dev\\project\\sr3Matrix\\git\\sr3-matrix\\src\\components\\EntryClass.ts":"10","C:\\Users\\grego\\dev\\project\\sr3Matrix\\git\\sr3-matrix\\src\\components\\SecurityColor.ts":"11","C:\\Users\\grego\\dev\\project\\sr3Matrix\\git\\sr3-matrix\\src\\components\\IntrusionCountermeasure.tsx":"12","C:\\Users\\grego\\dev\\project\\sr3Matrix\\git\\sr3-matrix\\src\\components\\FileLoader.tsx":"13","C:\\Users\\grego\\dev\\project\\sr3Matrix\\git\\sr3-matrix\\src\\components\\host\\HostView.tsx":"14"},{"size":682,"mtime":1612954604626,"results":"15","hashOfConfig":"16"},{"size":425,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":397,"mtime":1613046523654,"results":"18","hashOfConfig":"16"},{"size":117,"mtime":1611850360128,"results":"19","hashOfConfig":"16"},{"size":269,"mtime":1612620488851,"results":"20","hashOfConfig":"16"},{"size":122,"mtime":1612788735860,"results":"21","hashOfConfig":"16"},{"size":193,"mtime":1612195596618,"results":"22","hashOfConfig":"16"},{"size":3570,"mtime":1613140644559,"results":"23","hashOfConfig":"16"},{"size":392,"mtime":1613049860629,"results":"24","hashOfConfig":"16"},{"size":1567,"mtime":1613050141248,"results":"25","hashOfConfig":"16"},{"size":5579,"mtime":1613141274445,"results":"26","hashOfConfig":"16"},{"size":4461,"mtime":1613259576286,"results":"27","hashOfConfig":"16"},{"size":1033,"mtime":1612972020596,"results":"28","hashOfConfig":"16"},{"size":1310,"mtime":1613260112781,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"orarci",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"33"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"33"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"33"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"33"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\grego\\dev\\project\\sr3Matrix\\git\\sr3-matrix\\src\\index.tsx",["64"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {Provider} from 'react-redux'\n// import store from './redux/store'\n\nReactDOM.render(\n\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>, \n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n// <Provider store={store}>\n// \t\t<React.StrictMode>\n// \t\t\t<App />\n// \t\t</React.StrictMode>\n// \t</Provider>,",["65","66"],"C:\\Users\\grego\\dev\\project\\sr3Matrix\\git\\sr3-matrix\\src\\reportWebVitals.ts",[],"C:\\Users\\grego\\dev\\project\\sr3Matrix\\git\\sr3-matrix\\src\\App.tsx",["67"],"import React from 'react';\nimport './App.css';\nimport { HostManager } from './components/host/Host';\nimport { Hint } from './components/hint/Hint';\n\n\nfunction App() {\n\tlet tmpNr: number = 0;\n\n\treturn (\n\t<div className=\"App\">\n\t\t\n\t\t<div style={{width: \"50%\"}}>\n\t\t\t<HostManager />\n\t\t</div>\n\t\t\n\t\t<div style={{width: \"50%\"}}>\n\t\t\t<Hint />\n\t\t</div>\n\t\n\t\t<div>\n\t\t</div>\n\t</div>\n  );\n}\n\nexport default App;\n","C:\\Users\\grego\\dev\\project\\sr3Matrix\\git\\sr3-matrix\\src\\common\\Enums.ts",[],"C:\\Users\\grego\\dev\\project\\sr3Matrix\\git\\sr3-matrix\\src\\common\\Core.ts",[],"C:\\Users\\grego\\dev\\project\\sr3Matrix\\git\\sr3-matrix\\src\\redux\\store.ts",[],"C:\\Users\\grego\\dev\\project\\sr3Matrix\\git\\sr3-matrix\\src\\redux\\reducer\\index.ts",["68"],"C:\\Users\\grego\\dev\\project\\sr3Matrix\\git\\sr3-matrix\\src\\components\\host\\Host.tsx",["69","70"],"import React, { Component } from 'react';\r\nimport { EntryClasses, getEntryClass } from '../EntryClass';\r\nimport './Host.css';\r\nimport { createTriggerList, getSecurityColor, SecurityColors } from '../SecurityColor';\r\nimport { FileLoader } from '../FileLoader';\r\nimport HostView from './HostView';\r\nimport { sizePerLvl, IntrusionCountermeasure } from '../IntrusionCountermeasure';\r\nimport { costPerMpByLvl } from '../IntrusionCountermeasure';\r\n\r\nexport interface Host {\r\n\tentryClass?: EntryClasses;\r\n\tsecColor?: SecurityColors;\r\n\r\n\tsecValue?: number;\r\n\r\n\tentry?: number;\r\n\tcontrol?: number;\r\n\tindex?: number;\r\n\tfile?: number;\r\n\tperiphery?: number;\r\n\r\n\ttriggerList?:Array<IntrusionCountermeasure>;\r\n\r\n\tcosts?:number;\r\n}\r\n\r\nexport class HostManager extends Component<any, {host:Host, settings?:any}> {\r\n\tconstructor(props:any) {\r\n\t\tsuper(props);\r\n\t\tthis.state =\r\n\t\t{\r\n\t\t\thost: this.createHost(EntryClasses.average, SecurityColors.green),\r\n\t\t\tsettings: {\r\n\t\t\t\tsecColor: SecurityColors.green,\r\n\t\t\t\tentry: EntryClasses.average\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tcreateHost(entryClass: EntryClasses, color: SecurityColors):Host {\r\n\t \tlet host: Host = {};\r\n\t \tconst ecRule = getEntryClass(entryClass);\r\n\t \tconst secRule = getSecurityColor(color);\r\n\r\n\t \thost.entryClass = entryClass;\r\n\t \thost.secColor = color;\r\n\r\n\t \thost.secValue = ecRule.securityLevel();\r\n\r\n\t \thost.entry = ecRule.subsystemLevel();\r\n\t \thost.control = ecRule.subsystemLevel();\r\n\t \thost.index = ecRule.subsystemLevel();\r\n\t \thost.file = ecRule.subsystemLevel();\r\n\t \thost.periphery = ecRule.subsystemLevel();\r\n\r\n\t \thost.triggerList = createTriggerList(secRule, ecRule);\r\n\r\n\t\thost.costs = host.triggerList.reduce((prev: number, ic: IntrusionCountermeasure, i) => {\r\n\t\t\tconsole.log(prev, ic, sizePerLvl[ic.lvl], costPerMpByLvl[ic.lvl]);\r\n\t\t\treturn prev + sizePerLvl[ic.lvl] * ic.multiplier * costPerMpByLvl[ic.lvl];\r\n\t\t}, hostCosts[host.secValue]);\r\n\r\n\t\treturn host\r\n\t }\r\n\r\n\tcreateNewHost() {\r\n\t\tthis.setHost(this.createHost(this.state.settings.entry, this.state.settings.secColor));\r\n\t}\r\n\r\n\tsetSecColor(secColor: SecurityColors) {\r\n\t\tthis.state.settings.secColor = secColor;\r\n\t\tthis.setState(this.state);\r\n\t}\r\n\t\r\n\tsetEntry(entry: EntryClasses) {\r\n\t\tthis.state.settings.entry = entry;\r\n\t\tthis.setState(this.state);\r\n\t}\r\n\t\r\n\tsetHost(host: Host) {\r\n\t\tlet state: any = this.state;\r\n\t\tstate.host = host;\r\n\t\tthis.setState(state);\r\n\t}\r\n\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t<div className=\"Host\">\r\n\t\t\tColor: {this.state.settings.secColor}\r\n\t\t\t<button onClick={() => this.setSecColor(SecurityColors.blue)}>Blue</button>\r\n\t\t\t<button onClick={() => this.setSecColor(SecurityColors.green)}>Green</button>\r\n\t\t\t<button onClick={() => this.setSecColor(SecurityColors.orange)}>Orange</button>\r\n\t\t\t<button onClick={() => this.setSecColor(SecurityColors.red)}>Red</button>\r\n\t\t\t<br/>\r\n\t\t\t\r\n\t\t\tEntry: {this.state.settings.entry}\r\n\t\t\t<button onClick={() => this.setEntry(EntryClasses.easy)}>Easy</button>\r\n\t\t\t<button onClick={() => this.setEntry(EntryClasses.average)}>Average</button>\r\n\t\t\t<button onClick={() => this.setEntry(EntryClasses.hard)}>Hard</button>\r\n\t\t\t<br/>\r\n\t\t\t\r\n\t\t\t<button onClick={() => this.createNewHost()}>Generate</button>\r\n\t\t\t<br/>\r\n\t\t\t<br/>\r\n\t\t\t<FileLoader<Host> toSave={this.state.host} name={\"host\"} onLoad={(resp) => this.setHost(resp)}/>\r\n\t\t\t<br/>\r\n\t\t\t\r\n\t\t\t<HostView host={this.state.host} />\r\n\t\t</div>\r\n\t  );\r\n\t}\r\n}\r\n\r\nexport const hostCosts:Array<number> = //secValue == costs analog cyberdeck\r\n[\r\n\t2500,\r\n\t5000,\r\n\t8000,\r\n\t14000,\r\n\t32000,\r\n\t70000,\r\n\t125000,\r\n\t250000,\r\n\t400000,\r\n\t600000,\r\n\t960000,\r\n\t1150000,\r\n\t1500000\r\n];\r\n\r\n\r\n\r\n","C:\\Users\\grego\\dev\\project\\sr3Matrix\\git\\sr3-matrix\\src\\components\\hint\\Hint.tsx",["71"],"import \"./Hint.css\";\r\nimport { ics, IntrusionCountermeasure } from \"../IntrusionCountermeasure\";\r\nimport React from \"react\";\r\n\r\nexport function Hint() {\r\n\treturn (\r\n\t\t<div>\r\n\t\tHints:<br/>\r\n\t\t{\r\n\t\t\tics.map((ic:IntrusionCountermeasure, index:number) => {\r\n\t\t\t\treturn <small key={index} className=\"item\"><a>{ic.name} :</a> {ic.desc}[{ic.type}]<br/><br/></small>;\r\n\t\t\t})\r\n\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n","C:\\Users\\grego\\dev\\project\\sr3Matrix\\git\\sr3-matrix\\src\\components\\EntryClass.ts",[],"C:\\Users\\grego\\dev\\project\\sr3Matrix\\git\\sr3-matrix\\src\\components\\SecurityColor.ts",[],"C:\\Users\\grego\\dev\\project\\sr3Matrix\\git\\sr3-matrix\\src\\components\\IntrusionCountermeasure.tsx",["72","73"],"C:\\Users\\grego\\dev\\project\\sr3Matrix\\git\\sr3-matrix\\src\\components\\FileLoader.tsx",["74"],"import React, { ChangeEvent, Component } from 'react';\r\n\r\nexport class FileLoader<T> extends Component<{toSave: T, name:string, onLoad?:(file: T) => void}>{\r\n\r\n\tconstructor(props: {toSave: T, name:string, onLoad?:(file: T) => void}) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\tdownloadFile(obj: T, name:string) {\r\n\t\tlet a = document.createElement(\"a\");\r\n\t\tlet file = new Blob([JSON.stringify(obj)], {type: \"application/json\"});\r\n\t\ta.href = URL.createObjectURL(file);\r\n\t\ta.download = `${name}.mtx`;\r\n\t\ta.click();\r\n\t\ta.remove();\r\n\t}\r\n\r\n\tuploadFile(e: ChangeEvent<HTMLInputElement>) {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.onload = (e:ProgressEvent) => {\r\n\t\t\tthis.props.onLoad( JSON.parse(reader.result.toString().trim()) )\r\n\t\t}\r\n\t\treader.readAsText( e.target.files[0]);\r\n\t}\r\n\r\n\trender() {\r\n\t\t\r\n\t\treturn (\r\n\t\t<div className=\"json-expoter\">\r\n\t\t\t<button onClick={() => this.downloadFile(this.props.toSave, this.props.name)}>Save</button>\r\n\t\t\t<input type=\"file\" onChange={(e) => this.uploadFile(e)} title=\"Load\"></input>\r\n\t\t</div>\r\n\t);\r\n\t}\r\n}\r\n\r\n\r\n","C:\\Users\\grego\\dev\\project\\sr3Matrix\\git\\sr3-matrix\\src\\components\\host\\HostView.tsx",[],{"ruleId":"75","severity":1,"message":"76","line":7,"column":9,"nodeType":"77","messageId":"78","endLine":7,"endColumn":17},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"75","severity":1,"message":"83","line":8,"column":6,"nodeType":"77","messageId":"78","endLine":8,"endColumn":19},{"ruleId":"75","severity":1,"message":"84","line":1,"column":10,"nodeType":"77","messageId":"78","endLine":1,"endColumn":25},{"ruleId":"85","severity":1,"message":"86","line":71,"column":3,"nodeType":"87","endLine":71,"endColumn":22},{"ruleId":"85","severity":1,"message":"86","line":76,"column":3,"nodeType":"87","endLine":76,"endColumn":22},{"ruleId":"88","severity":1,"message":"89","line":11,"column":48,"nodeType":"90","endLine":11,"endColumn":51},{"ruleId":"91","severity":1,"message":"92","line":20,"column":19,"nodeType":"93","messageId":"94","endLine":20,"endColumn":21},{"ruleId":"88","severity":1,"message":"89","line":34,"column":3,"nodeType":"90","endLine":34,"endColumn":71},{"ruleId":"95","severity":1,"message":"96","line":5,"column":2,"nodeType":"97","messageId":"98","endLine":7,"endColumn":3},"@typescript-eslint/no-unused-vars","'Provider' is defined but never used.","Identifier","unusedVar","no-native-reassign",["99"],"no-negated-in-lhs",["100"],"'tmpNr' is assigned a value but never used.","'combineReducers' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]